<?xml version="1.0" encoding="UTF-8"?>
<ruleset name="BD">
  <description>BD Code Style</description>

  <arg name="colors"/>
  <arg name="report-width" value="160"/>
  <arg name="extensions" value="php"/>

  <exclude-pattern>/vendor</exclude-pattern>

  <rule ref="/Users/mole/workspace/mole-chen/mole-coding-standards/Mole"/>

  <rule ref="Generic.Arrays.DisallowLongArraySyntax"/>
  <!-- <rule ref="Generic.Commenting.DocComment"/> -->
  <rule ref="Generic.ControlStructures.InlineControlStructure"/>
  <rule ref="Generic.Files.ByteOrderMark"/>
  <!-- <rule ref="Generic.Files.EndFileNewline"/> -->
  <!-- <rule ref="Generic.Files.InlineHTML"/> -->
  <rule ref="Generic.Files.LineEndings">
    <properties>
      <property name="eolChar" value="\n"/>
    </properties>
  </rule>
  <!-- <rule ref="Generic.Files.OneClassPerFile"/> -->
  <!-- <rule ref="Generic.Files.OneInterfacePerFile"/> -->
  <!-- <rule ref="Generic.Files.OneTraitPerFile"/> -->
  <rule ref="Generic.Formatting.DisallowMultipleStatements"/>
  <rule ref="Generic.Formatting.SpaceAfterCast"/>
  <!-- <rule ref="Generic.Functions.CallTimePassByReference"/> -->
  <rule ref="Generic.Functions.FunctionCallArgumentSpacing"/>
  <rule ref="Generic.NamingConventions.CamelCapsFunctionName"/>
  <!-- <rule ref="Generic.NamingConventions.ConstructorName"/> -->
  <rule ref="Generic.NamingConventions.UpperCaseConstantName"/>
  <!-- <rule ref="Generic.PHP.CharacterBeforePHPOpeningTag">
    <exclude-pattern></exclude-pattern>
  </rule> -->
  <rule ref="Generic.PHP.DeprecatedFunctions"/>
  <rule ref="Generic.PHP.DisallowShortOpenTag.EchoFound">
    <severity>0</severity>
  </rule>
  <rule ref="Generic.PHP.LowerCaseKeyword"/>
  <rule ref="Generic.PHP.LowerCaseConstant"/>
  <rule ref="Generic.WhiteSpace.DisallowTabIndent"/>
  <rule ref="Generic.WhiteSpace.ScopeIndent">
    <properties>
      <property name="ignoreIndentationTokens" type="array" value="T_COMMENT,T_DOC_COMMENT_OPEN_TAG"/>
    </properties>
  </rule>
<!--   <rule ref="Generic.WhiteSpace.ScopeIndent.IncorrectExact">
    <severity>0</severity>
  </rule> -->
  
  <rule ref="PSR1.Classes.ClassDeclaration"/>
  <!-- <rule ref="PSR1.Files.SideEffects"/> -->
  <rule ref="PSR1.Methods.CamelCapsMethodName"/>

  <rule ref="PSR2.Classes.ClassDeclaration"/>
  <rule ref="PSR2.Classes.PropertyDeclaration"/>
  <rule ref="PSR2.Classes.PropertyDeclaration.Underscore">
    <severity>0</severity>
  </rule>
  <rule ref="PSR2.ControlStructures.ControlStructureSpacing"/>
  <rule ref="PSR2.ControlStructures.ElseIfDeclaration"/>
  <rule ref="PSR2.ControlStructures.SwitchDeclaration"/>
  <rule ref="PSR2.Files.ClosingTag"/>
  <rule ref="PSR2.Files.EndFileNewline"/>
  <rule ref="PSR2.Methods.FunctionCallSignature"/>
  <rule ref="PSR2.Methods.MethodDeclaration"/>
  <rule ref="PSR2.Namespaces.NamespaceDeclaration"/>
  <rule ref="PSR2.Namespaces.UseDeclaration"/>

  <rule ref="PEAR.Functions.ValidDefaultValue"/>

  <!-- <rule ref="Squiz.Arrays.ArrayDeclaration"/> -->
  <rule ref="Squiz.Arrays.ArrayBracketSpacing"/>
  <rule ref="Squiz.Classes.ValidClassName"/>
  <rule ref="Squiz.ControlStructures.ControlSignature"/>
  <rule ref="Squiz.ControlStructures.ForEachLoopDeclaration"/>
  <rule ref="Squiz.ControlStructures.ForLoopDeclaration"/>
  <rule ref="Squiz.ControlStructures.LowercaseDeclaration"/>
  <rule ref="Squiz.Functions.FunctionDeclaration"/>
  <rule ref="Squiz.Functions.FunctionDeclarationArgumentSpacing">
    <properties>
      <property name="equalsSpacing" value="1"/>
    </properties>
  </rule>
  <rule ref="Squiz.Functions.LowercaseFunctionKeywords"/>
  <rule ref="Squiz.Functions.MultiLineFunctionDeclaration"/>
  <rule ref="Squiz.PHP.EmbeddedPhp"/>
  <rule ref="Squiz.PHP.EmbeddedPhp.NoSemicolon">
    <severity>0</severity>
  </rule>
  <rule ref="Squiz.PHP.EmbeddedPhp.Empty">
    <severity>0</severity>
  </rule>
  <rule ref="Squiz.PHP.LowercasePHPFunctions"/>
  <rule ref="Squiz.Scope.MethodScope"/>
  <rule ref="Squiz.Scope.StaticThisUsage"/>
  <rule ref="Squiz.Strings.EchoedStrings"/>
  <rule ref="Squiz.Strings.ConcatenationSpacing">
    <properties>
      <property name="spacing" value="1"/>
      <property name="ignoreNewlines" value="true"/>
    </properties>
  </rule>
  <rule ref="Squiz.WhiteSpace.CastSpacing"/>
  <rule ref="Squiz.WhiteSpace.ControlStructureSpacing" />
  <rule ref="Squiz.WhiteSpace.ControlStructureSpacing.NoLineAfterClose">
    <severity>0</severity>
  </rule>
  <rule ref="Squiz.WhiteSpace.ControlStructureSpacing.SpacingAfterOpen">
    <severity>0</severity>
  </rule>
<!--   <rule ref="Squiz.WhiteSpace.FunctionSpacing">
    <properties>
      <property name="spacing" value="1"/>
    </properties>
  </rule>
  <rule ref="Squiz.WhiteSpace.FunctionSpacing.Before">
    <severity>0</severity>
  </rule> -->
  <!-- <rule ref="Squiz.WhiteSpace.LanguageConstructSpacing"/> -->
  <rule ref="Squiz.WhiteSpace.LogicalOperatorSpacing"/>
  <!-- <rule ref="Squiz.WhiteSpace.ObjectOperatorSpacing"/> -->
  <rule ref="Squiz.WhiteSpace.OperatorSpacing"/>
  <!-- <rule ref="Squiz.WhiteSpace.ScopeClosingBrace"/> -->
  <rule ref="Squiz.WhiteSpace.ScopeKeywordSpacing"/>
  <rule ref="Squiz.WhiteSpace.SemicolonSpacing"/>
  <rule ref="Squiz.WhiteSpace.SuperfluousWhitespace">
    <properties>
      <property name="ignoreBlankLines" value="false"/>
    </properties>
  </rule>


</ruleset>
